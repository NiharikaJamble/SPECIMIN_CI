name: specimin-evaluation_CI_with_Gradle

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  specimin-evaluation:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Set up Java JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'  # Replace with the Java version you need (e.g., 11, 16, etc.)
          distribution: 'adopt'  # Specify the distribution of Java (e.g., adopt, zulu, etc.)
          architecture: 'x64'  # Specify the architecture of Java (e.g., x64, x86)
        # server-id: 'github'  # Specify the server ID (typically 'github')
        # server-username: ${{ github.actor }}  # Use GITHUB_ACTOR for server username
          server-password: ${{ secrets.GITHUB_TOKEN }}  # Use GITHUB_TOKEN for server password
          overwrite-settings: true  # Overwrite any existing settings
          check-latest: false  # Do not check for the latest version
 
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # pip install -r requirements.txt

      - name: Clone ASHE repository
        run: git clone https://github.com/NiharikaJamble/ASHE_Automated-Software-Hardening-for-Entrypoints ASHE

      - name: Clone CI repository
        run: git clone https://github.com/NiharikaJamble/CI_FOR_SPECIMIN_PERFORMANCE CI

      - name: Clone Specimin Evaluation repository (for scripts)
        run: git clone https://github.com/NiharikaJamble/specimin-evaluation

      - name: Download CSV file
        run: |
          mkdir -p $(pwd)/CI
          curl -sSL -o $(pwd)/CI/PROJECT_LIST_FOR_CI_TEST.csv https://raw.githubusercontent.com/NiharikaJamble/CI_FOR_SPECIMIN_PERFORMANCE/main/PROJECT_LIST_FOR_CI_TEST.csv

      - name: Display CSV Content
        run: |
          echo "Content of PROJECT_LIST_FOR_CI_TEST.csv:"
          cat $(pwd)/CI/PROJECT_LIST_FOR_CI_TEST.csv
          
      - name: Run ASHE and Specimin analysis scripts
        run: |
          echo $(pwd)
          python3 specimin-evaluation/ashe_scripts/run_ashe_for_stats.py \
          $(pwd)/ASHE \
          $(pwd)/CI/PROJECT_LIST_FOR_CI_TEST.csv \
          $(pwd)/CI/REPO_CLONE_SPACE \
          $(pwd)/ASHE/src/main/resources/config.properties

      - name: Parse compilable percentage
        id: parse_compilable_percentage
        run: |
          python3 specimin-evaluation/ashe_scripts/specimin_statistics.py \
          $(pwd)/ASHE/logs/app.log
          echo $(pwd)
          grep 'Fully successful from minimization to compilation' $(pwd)/ASHE/logs/specimin_statistics.txt | awk '{print $NF}' > compilable_percentage.txt
          cat compilable_percentage.txt
        continue-on-error: true

      - name: Check for monotonically increasing compilable percentage
        run: |
          current_percentage=$(cat compilable_percentage.txt)
          echo "Current compilable percentage: $current_percentage"
          prev_percentage=${{ secrets.PREV_COMPILABLE_PERCENTAGE }}
          echo "Previous compilable percentage: $prev_percentage"
          if (( $(echo "$current_percentage < $prev_percentage" |bc -l) )); then
            echo "Error: Compilable percentage is not increasing."
            exit 1
          fi
        env:
          prev_percentage: ${{ secrets.PREV_COMPILABLE_PERCENTAGE }}

      - name: Update Previous Compilable Percentage
        if: success()
        run: echo "${{ steps.parse_compilable_percentage.outputs.current_percentage }}" > prev_compilable_percentage.txt
        env:
          prev_percentage: ${{ secrets.PREV_COMPILABLE_PERCENTAGE }}

      - name: Upload compilable percentage
        if: always()  # Ensure this step runs even if previous steps fail
        uses: actions/upload-artifact@v2
        with:
          name: compilable-percentage
          path: compilable_percentage.txt

      - name: Upload previous compilable percentage
        if: always()  # Ensure this step runs even if previous steps fail
        uses: actions/upload-artifact@v2
        with:
          name: prev-compilable-percentage
          path: prev_compilable_percentage.txt
