name: specimin-evaluation_CI_with_Gradle

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  specimin-evaluation:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Clone projects for analysis
        run: |
          git clone https://github.com/user/project1.git
          # Add more projects as needed

      - name: Run ASHE and Specimin analysis scripts
        run: |
          python3 run_ashe_for_stats.py /path/to/ASHE /path/to/repositories.csv /path/to/clone/repos /path/to/config.properties

      - name: Parse compilable percentage
        id: parse_compilable_percentage
        run: |
          python3 specimin_statistics.py /path/to/ASHE/logs/app.log
          grep 'Fully successful from minimization to compilation' /path/to/ASHE/logs/specimin_statistics.txt | awk '{print $NF}' > compilable_percentage.txt
        continue-on-error: true

      - name: Check for monotonically increasing compilable percentage
        run: |
          current_percentage=$(cat compilable_percentage.txt)
          echo "Current compilable percentage: $current_percentage"
          prev_percentage=${{ secrets.PREV_COMPILABLE_PERCENTAGE }}
          echo "Previous compilable percentage: $prev_percentage"
          if (( $(echo "$current_percentage < $prev_percentage" |bc -l) )); then
            echo "Error: Compilable percentage is not increasing."
            exit 1
          fi
        env:
          prev_percentage: ${{ secrets.PREV_COMPILABLE_PERCENTAGE }}

      - name: Update Previous Compilable Percentage
        if: success()
        run: echo "${{ steps.parse_compilable_percentage.outputs.current_percentage }}" > prev_compilable_percentage.txt
        env:
          prev_percentage: ${{ secrets.PREV_COMPILABLE_PERCENTAGE }}
 
