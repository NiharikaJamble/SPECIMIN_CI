# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-gradle-project:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # so that spotless can ratchet; see https://github.com/diffplug/spotless/issues/710
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Run build with Gradle Wrapper
        run: ./gradlew build expectedTestOutputsMustCompile
      - name: export Specimin PATH
        run: echo "SPECIMIN=$(pwd)" >> $GITHUB_ENV
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Checkout specimin-evaluation repository
        uses: actions/checkout@v3
        with:
         repository: tahiat/specimin-evaluation
         path: specimin-evaluation
      - name: Run evaluation script
        run: |
          cd specimin-evaluation
          echo "specimin path-> $SPECIMIN"
          python main.py
      - name: Check evaluation status
        run: diff -uw src/main/resources/target_status.json specimin-evaluation/ISSUES/target_status.json
      - name: Compile minimized programs
        run: |
          cd specimin-evaluation
          sh check_compilation.sh
      - name: Check targets compile status
        run: |
          cd specimin-evaluation
          sh check_compilation.sh
          cd ..
          diff -uw src/main/resources/min_program_compile_status.json specimin-evaluation/ISSUES/compile_status.json
      - name: Check preservation status
        run: diff -uw src/main/resources/preservation_status.json specimin-evaluation/ISSUES/preservation_status.json
      - name: Jar mode evaluation script execution
        run: |
          cd specimin-evaluation
          echo "specimin path-> $SPECIMIN"
          python main.py -j true
      - name: Jar mode specimin execution status check
        run: diff -uw src/main/resources/jar_mode_specimin_execution_status.json specimin-evaluation/ISSUES/target_status.json
      - name: Jar mode targets compile status check
        run: |
          cd specimin-evaluation
          sh check_jar_mode_compilation.sh
          cd ..
          diff -uw src/main/resources/jar_mode_min_program_compilation_status.json specimin-evaluation/ISSUES/jar_compile_status.json
      - name: Jar mode preservation status check
        run: diff -uw src/main/resources/jar_mode_preservation_status.json specimin-evaluation/ISSUES/preservation_status.json